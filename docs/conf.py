#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# cvxportfolio documentation build configuration file, created by
# sphinx-quickstart on Mon Apr 24 13:19:35 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
from setuptools_scm import get_version as _get_version

sys.path.insert(0, os.path.abspath('../'))

# -- Project information -----------------------------------------------------

project = 'Cvxportfolio'
copyright = '2016-2024, The Cvxportfolio Authors'
author = 'The Cvxportfolio Authors'

# The full version, including alpha/beta/rc tags
release = _get_version('..')

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

REPO = "https://github.com/cvxgrp/cvxportfolio/"

# -- General configuration ---------------------------------------------------

# Set canonical URL from the Read the Docs Domain; from ReadTheDocs email
# in July 2024
html_baseurl = os.environ.get("READTHEDOCS_CANONICAL_URL", "")

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc', 
              'sphinx.ext.autosummary', 
              #'numpydoc',
              'sphinx.ext.mathjax',
              #'sphinx.ext.githubpages',
	          #'sphinx.ext.napoleon',
              'sphinx.ext.autosectionlabel',
              # 'myst_parser',
              'sphinx.ext.extlinks',
          ]

# # Autoapi test: nice as first step, but
# # current approach is better
# extensions.append('autoapi.extension')
# autoapi_dirs = ['../cvxportfolio']

# Link github source code browser from api documentation
# uses https://sphinx-github-style.readthedocs.io/en/latest/index.html
extensions += [
    "sphinx_github_style",
]
linkcode_url = REPO

# in this way we link to the tagged version in github
linkcode_blob = release


# link to paper; can also build sphinx rule from scratch
# PDF_LINK = 'https://stanford.edu/~boyd/papers/pdf/cvx_portfolio.pdf'
PDF_LINK = 'https://cvxportfolio.readthedocs.org/en/stable/_static/cvx_portfolio.pdf'
extlinks = {'paper': (f'{PDF_LINK}#%s', None)}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = ['.rst', '.md']

# The master toctree document.
master_doc = 'index'



# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'pydata_sphinx_theme'

# PYDATA_SPHINX_THEME configuration

html_sidebars = { # disable left sidebar on certain pages
  "manual": [],
  "contributing": []
}

html_theme_options = { # button to let users send PR to GH
    "use_edit_page_button": True,
    "show_toc_level": 3,
}

html_context = {
    "github_url": "https://github.com",
    "github_user": "cvxgrp",
    "github_repo": "cvxportfolio",
    "github_version": "master", # don't know if can point to tag of the page?
    "doc_path": "docs",
}

# From July 2024 email, see
# https://docs.readthedocs.io/en/stable/addons.html#enabling-read-the-docs-addons
# Tell Jinja2 templates the build is running on Read the Docs
if os.environ.get("READTHEDOCS", "") == "True":
    html_context["READTHEDOCS"] = True

# however this seems confusing to me
# html_show_sourcelink = False


# not used by FURO
# html_theme_options = {
#     "source_repository": REPO,
#     "source_branch": "master",
#     "source_directory": "docs/",
# }

# html_sidebars = {
#    '**': [
#        'about.html', 'navigation.html', 'searchbox.html',
#    ]
# }

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']




# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'cvxportfoliodoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'cvxportfolio.tex', 'Cvxportfolio Documentation',
     'The Cvxportfolio Authors and Contributors', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'cvxportfolio', 'Cvxportfolio Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'cvxportfolio', 'Cvxportfolio Documentation',
     author, 'cvxportfolio', 'Portfolio Optimization and Back-Testing.',
     'Miscellaneous'),
]
